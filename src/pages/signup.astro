---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Sign Up - SafeCaption">
  <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-white">
          Create your account
        </h2>
        <p class="mt-2 text-center text-sm text-gray-400">
          Start with 100 free API calls
        </p>
      </div>
      <form id="signup-form" class="mt-8 space-y-6">
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="email" class="sr-only">Email address</label>
            <input
              id="email"
              name="email"
              type="email"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 placeholder-gray-500 text-white bg-gray-800 rounded-t-md focus:outline-none focus:ring-purple-500 focus:border-purple-500 focus:z-10 sm:text-sm"
              placeholder="Email address"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Password</label>
            <input
              id="password"
              name="password"
              type="password"
              required
              minlength="6"
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 placeholder-gray-500 text-white bg-gray-800 focus:outline-none focus:ring-purple-500 focus:border-purple-500 focus:z-10 sm:text-sm"
              placeholder="Password (min 6 characters)"
            />
          </div>
          <div>
            <label for="confirm-password" class="sr-only">Confirm Password</label>
            <input
              id="confirm-password"
              name="confirm-password"
              type="password"
              required
              minlength="6"
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-700 placeholder-gray-500 text-white bg-gray-800 rounded-b-md focus:outline-none focus:ring-purple-500 focus:border-purple-500 focus:z-10 sm:text-sm"
              placeholder="Confirm password"
            />
          </div>
        </div>

        <div id="error-message" class="text-red-400 text-sm hidden"></div>
        <div id="success-message" class="text-green-400 text-sm hidden"></div>

        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500"
          >
            Sign up
          </button>
        </div>

        <div class="text-center">
          <p class="text-sm text-gray-400">
            Already have an account?
            <a href="/login" class="font-medium text-purple-400 hover:text-purple-300">
              Sign in
            </a>
          </p>
        </div>
      </form>
    </div>
  </div>

  <script>
    import { supabase } from '../lib/supabase';

    const form = document.getElementById('signup-form') as HTMLFormElement;
    const errorMessage = document.getElementById('error-message') as HTMLDivElement;
    const successMessage = document.getElementById('success-message') as HTMLDivElement;

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();

      if (!supabase) {
        errorMessage.textContent = 'Authentication is not configured. Please contact support.';
        errorMessage.classList.remove('hidden');
        return;
      }

      const formData = new FormData(form);
      const email = formData.get('email') as string;
      const password = formData.get('password') as string;
      const confirmPassword = formData.get('confirm-password') as string;

      // Clear previous messages
      errorMessage.classList.add('hidden');
      successMessage.classList.add('hidden');

      if (password !== confirmPassword) {
        errorMessage.textContent = 'Passwords do not match';
        errorMessage.classList.remove('hidden');
        return;
      }

      try {
        const { data, error } = await supabase.auth.signUp({
          email,
          password,
        });

        if (error) {
          errorMessage.textContent = error.message;
          errorMessage.classList.remove('hidden');
        } else {
          successMessage.textContent = 'Account created! Check your email to verify your account.';
          successMessage.classList.remove('hidden');
          form.reset();

          // Redirect to login after 3 seconds
          setTimeout(() => {
            window.location.href = '/login';
          }, 3000);
        }
      } catch (err) {
        errorMessage.textContent = 'An error occurred. Please try again.';
        errorMessage.classList.remove('hidden');
      }
    });
  </script>
</Layout>